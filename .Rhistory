remotes::install_github('vincentarelbundock/modelsummary')
install.packages('xfun')
remotes::install_github('vincentarelbundock/modelsummary')
library(modelsummary)
install.packages(c("betareg", "brio", "crosstalk", "dagitty", "DBI", "dbplyr", "deldir", "diffobj", "directlabels", "dotCall64", "DT", "expm", "fastmap", "fixest", "flextable", "forcats", "formattable", "freetypeharfbuzz", "ftExtra", "furrr", "gert", "ggdag", "ggrepel", "ggthemes", "git2r", "glmnet", "groundhog", "gtsummary", "hexbin", "hms", "httpuv", "huxtable", "janitor", "leaflet", "lfe", "magick", "margins", "matrixStats", "memoise", "mice", "multcomp", "paletteer", "panelr", "parallelly", "plm", "plotly", "prismatic", "pROC", "proj4", "promises", "quantreg", "ragg", "rappdirs", "RcppArmadillo", "RcppDate", "reprex", "rgdal", "rgl", "rsample", "rstatix", "rticles", "sass", "scam", "sf", "shiny", "sp", "SparseM", "spatstat.data", "spatstat.utils", "SQUAREM", "stars", "testthat", "textshaping", "tidycensus", "tidytext", "tmap", "tmaptools", "TMB", "usethis", "VGAM", "waldo", "withr"))
help(packge = 'rddensity')
help(packge = 'rdddensity')
install.packages('rddensity')
help(packge = 'rdddensity')
help(packge = 'rddensity')
help(package = 'rddensity')
data("EuStockMarkets")
plot(density(EuStockMarkets))
y = density(EuStockMarkets)$y
d <- data.frame(x = density(EuStockMarkets)$x,
y = density(EuStockMarkets)$y)
ggplot(d, aes(x = x, y = y)) +
geom_line() +
ggpubr::theme_pubr() +
labs(x = 'Stock Index',
y = 'Density')
library(ggplot2)
ggplot(d, aes(x = x, y = y)) +
geom_line() +
ggpubr::theme_pubr() +
labs(x = 'Stock Index',
y = 'Density')
quant <- quantile(EuStockMarkets, c(.25, .5, .75))
mn <- mean(EuStockMarkets)
ggplot(d, aes(x = x, y = y)) +
geom_line() +
geom_vline(aes(xintercept = quant)) +
ggpubr::theme_pubr() +
labs(x = 'Stock Index',
y = 'Density')
ggplot(d, aes(x = x, y = y)) +
geom_line() +
geom_vline(aes(xintercept = quant[1]), linetype = 'dashed', color = 'blue') +
ggpubr::theme_pubr() +
labs(x = 'Stock Index',
y = 'Density')
ggplot(d, aes(x = x, y = y)) +
geom_line() +
geom_vline(aes(xintercept = quant[1]), linetype = 'dashed', color = 'blue') +
geom_vline(aes(xintercept = quant[2]), linetype = 'dashed', color = 'blue') +
geom_vline(aes(xintercept = quant[3]), linetype = 'dashed', color = 'blue') +
geom_vline(aes(xintercept = mn), linetype = 'dashed', color = 'red') +
ggpubr::theme_pubr() +
labs(x = 'Stock Index',
y = 'Density')
help("EuStockMarkets")
EuStockMarkets <- EuStockMarkets[1,]
data("EuStockMarkets")
EuStockMarkets <- EuStockMarkets[,1]
d <- data.frame(x = density(EuStockMarkets)$x,
y = density(EuStockMarkets)$y)
quant <- quantile(EuStockMarkets, c(.25, .5, .75))
mn <- mean(EuStockMarkets)
ggplot(d, aes(x = x, y = y)) +
geom_line() +
geom_vline(aes(xintercept = quant[1]), linetype = 'dashed', color = 'blue') +
geom_vline(aes(xintercept = quant[2]), linetype = 'dashed', color = 'blue') +
geom_vline(aes(xintercept = quant[3]), linetype = 'dashed', color = 'blue') +
geom_vline(aes(xintercept = mn), linetype = 'dashed', color = 'red') +
ggpubr::theme_pubr() +
labs(x = 'Stock Index',
y = 'Density')
setwd("C:/Users/nhuntington-klein/OneDrive - Seattle University/CI Book/chapters/RegressionDiscontinuity")
## density test plot
library(tidyverse); library(rddensity)
gt <- read_csv('Government_Transfers_RDD_Data.csv')
help(package = 'rddensity')
rdplotdensity(m, gt$Income_Centered)
m <- rdrobust(gt$Support, gt$Income_Centered, c = 0)
## density test plot
library(tidyverse); library(rddensity); library(rdrobust)
m <- rdrobust(gt$Support, gt$Income_Centered, c = 0)
rdplotdensity(m, gt$Income_Centered)
m <- gt %>%
pull(Income_Centered) %>%
rddensity(c = 0)
rdplotdensity(m, gt$Income_Centered)
m <- gt %>%
pull(Income_Centered) %>%
rddensity(c = 0, h = .02)
rdplotdensity(m, gt$Income_Centered)
m
summary(m)
m <- gt %>%
pull(Income_Centered) %>%
rddensity(c = 0)
rdplotdensity(m, gt$Income_Centered)
m$X_min
m$bino
gt <- read_csv('Government_Transfers_RDD_Data.csv') %>%
mutate(inc_bins = cut(Income_Centered, breaks = .02*(-29:29)/29))
gt
ggplot(gt, aes(x = inc_bins)) + geom_bar()
gt <- read_csv('Government_Transfers_McCrary.csv') %>%
mutate(inc_bins = cut(Income_Centered, breaks = .02*(-29:29)/29))
ggplot(gt, aes(x = inc_bins)) + geom_bar()
summary(gt$Income_Centered)
gt <- read_csv('Government_Transfers_McCrary.csv') %>%
filter(abs(Income_Centered) <= .02) %>%
mutate(inc_bins = cut(Income_Centered, breaks = .02*(-29:29)/29))
ggplot(gt, aes(x = inc_bins)) + geom_bar()
# Estimate the discontinuity
gt <- read_csv('Government_Transfers_McCrary.csv')
gt %>%
pull(Income_Centered) %>%
rddensity(c = 0) %>%
summary()
# Estimate the discontinuity
gt <- read_csv('Government_Transfers_McCrary.csv')  %>%
filter(abs(Income_Centered) < .02)
gt %>%
pull(Income_Centered) %>%
rddensity(c = 0) %>%
summary()
read_csv('Government_Transfers_McCrary.csv') %>%
filter(abs(Income_Centered) <= .02) %>%
pull(Income_Centered) %>%
rddensity(c = 0)
read_csv('Government_Transfers_McCrary.csv') %>%
filter(abs(Income_Centered) <= .02) %>%
pull(Income_Centered) %>%
rddensity(c = 0) %>%
rdplotdensity()
gt <- read_csv('Government_Transfers_McCrary.csv') %>%
filter(abs(Income_Centered) <= .02)
gt %>%
pull(Income_Centered) %>%
rddensity(c = 0) %>%
rdplotdensity(gt$Income_Centered)
{
library(tidyverse)
library(extrafont)
library(ggpubr)
library(gghighlight)
library(cowplot)
library(modelsummary)
}
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
gt <- read_csv('Government_Transfers_McCrary.csv') %>%
filter(abs(Income_Centered) <= .02) %>%
mutate(inc_bins = cut(Income_Centered, breaks = .02*(-29:29)/29)) %>%
group_by(inc_bins) %>%
summarize(N = n())
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
gt
gt$inc_bins[30]
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = gt$inc_bins[30]), linetype = 'dashed') +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = gt$inc_bins[30]), linetype = 'dashed') +
scale_x_discrete(breaks = gt$inc_bins[c(10,20,30,40,50)]) +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = gt$inc_bins[30]), linetype = 'dashed') +
scale_x_discrete(breaks = gt$inc_bins[c(10,20,30,40,50)],
labels = function(x) str_sub(x,2,str_locate(x,',')[1,1])) +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = gt$inc_bins[30]), linetype = 'dashed') +
scale_x_discrete(breaks = gt$inc_bins[c(10,20,30,40,50)],
labels = function(x) str_sub(x,2,str_locate(x,',')[1,1]-1)) +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
x = gt$inc_ins[30]
x = gt$inc_bins[30]
str_sub(x, 2, str_locate(x,',')[1,1])
str_sub(x, 2, str_locate(x,',')[1,1]-1)
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = gt$inc_bins[30]), linetype = 'dashed') +
scale_x_discrete(breaks = gt$inc_bins[c(1,30,58)],
labels = c(-.02,0,.02)) +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(gt, aes(x = inc_bins, y = N)) + geom_col() +
geom_vline(aes(xintercept = gt$inc_bins[30]), linetype = 'dashed') +
scale_x_discrete(breaks = gt$inc_bins[c(1,30,57)],
labels = c(-.02,0,.02)) +
theme_pubr() +
labs(x = 'Centered Income (Binned)', y = 'Density') +
theme(text = element_text(family = 'serif', size = 14),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggsave('density_test.pdf', width = 6, height = 5,device=cairo_pdf)
help(vcovBS, package = 'sandwich')
setwd("C:/Users/nhuntington-klein/OneDrive - Seattle University/General Work/vtable/vtable")
help(modelsummary, package = "modelsummary")
library(tidyverse); library(modelsummary); library(sandwich)
# Read data
df <- read_csv('restaurant_data.csv')
setwd("C:/Users/nhuntington-klein/OneDrive - Seattle University/CI Book/chapters/RegressionDiscontinuity")
# Read data
df <- read_csv('restaurant_data.csv')
setwd("C:/Users/nhuntington-klein/OneDrive - Seattle University/CI Book/chapters/StatisticalAdjustment")
# Read data
df <- read_csv('restaurant_data.csv')
# Let's run our standard model from before
m <- lm(inspection_score ~ Year + Weekend, data = df)
# And use the vcov argument of msummary
# with vcovBS from the sandwich package
# to get boostrap SEs with 2000 samples
msummary(m,
vcov = function(x) vcovBS(x, R = 2000))
library(vtable)
library(vtable)
devtools::test()
devtools::check_win_devel()
